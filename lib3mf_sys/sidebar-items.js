window.SIDEBAR_ITEMS = {"constant":[["LIB3MF_ERROR_ATTACHMENTNOTFOUND",""],["LIB3MF_ERROR_BEAMLATTICE_INVALID_OBJECTTYPE",""],["LIB3MF_ERROR_BUFFERTOOSMALL",""],["LIB3MF_ERROR_CALCULATIONABORTED",""],["LIB3MF_ERROR_COULDNOTFINDLIBRARYEXPORT",""],["LIB3MF_ERROR_COULDNOTLOADLIBRARY",""],["LIB3MF_ERROR_ELEMENTCOUNTEXCEEDSLIMIT",""],["LIB3MF_ERROR_FORBIDDENCYCLICREFERENCE",""],["LIB3MF_ERROR_GENERICEXCEPTION",""],["LIB3MF_ERROR_INCOMPATIBLEBINARYVERSION",""],["LIB3MF_ERROR_INVALIDATTACHMENTSTREAM",""],["LIB3MF_ERROR_INVALIDBASEMATERIALGROUP",""],["LIB3MF_ERROR_INVALIDBUILDITEM",""],["LIB3MF_ERROR_INVALIDCAST",""],["LIB3MF_ERROR_INVALIDCOLORGROUP",""],["LIB3MF_ERROR_INVALIDCOMPONENT",""],["LIB3MF_ERROR_INVALIDCOMPONENTSOBJECT",""],["LIB3MF_ERROR_INVALIDCOMPOSITEMATERIALS",""],["LIB3MF_ERROR_INVALIDKEYSTORE",""],["LIB3MF_ERROR_INVALIDKEYSTORECONSUMER",""],["LIB3MF_ERROR_INVALIDMESHOBJECT",""],["LIB3MF_ERROR_INVALIDMODEL",""],["LIB3MF_ERROR_INVALIDMODELRESOURCE",""],["LIB3MF_ERROR_INVALIDMULTIPROPERTYGROUP",""],["LIB3MF_ERROR_INVALIDOBJECT",""],["LIB3MF_ERROR_INVALIDPARAM",""],["LIB3MF_ERROR_INVALIDPROPERTYCOUNT",""],["LIB3MF_ERROR_INVALIDRESOURCEINDEX",""],["LIB3MF_ERROR_INVALIDSLICESTACKRESOURCE",""],["LIB3MF_ERROR_INVALIDTEXTURE2DGROUP",""],["LIB3MF_ERROR_INVALIDTEXTURERESOURCE",""],["LIB3MF_ERROR_ITERATORINVALIDINDEX",""],["LIB3MF_ERROR_KEYSTORECONSUMERNOTFOUND",""],["LIB3MF_ERROR_KEYSTORERESOURCEDATANOTFOUND",""],["LIB3MF_ERROR_NOTIMPLEMENTED",""],["LIB3MF_ERROR_READERCLASSUNKNOWN",""],["LIB3MF_ERROR_RESOURCENOTFOUND",""],["LIB3MF_ERROR_SECURECONTEXTNOTREGISTERED",""],["LIB3MF_ERROR_SHOULDNOTBECALLED",""],["LIB3MF_ERROR_UNKOWNPROGRESSIDENTIFIER",""],["LIB3MF_ERROR_WRITERCLASSUNKNOWN",""],["LIB3MF_SUCCESS",""],["LIB3MF_VERSION_BUILDINFO",""],["LIB3MF_VERSION_MAJOR",""],["LIB3MF_VERSION_MICRO",""],["LIB3MF_VERSION_MINOR",""],["LIB3MF_VERSION_PRERELEASEINFO",""],["eLib3MFBeamLatticeBallMode_eBeamLatticeBallModeAll",""],["eLib3MFBeamLatticeBallMode_eBeamLatticeBallModeMixed",""],["eLib3MFBeamLatticeBallMode_eBeamLatticeBallModeNone",""],["eLib3MFBeamLatticeCapMode_eBeamLatticeCapModeButt",""],["eLib3MFBeamLatticeCapMode_eBeamLatticeCapModeHemiSphere",""],["eLib3MFBeamLatticeCapMode_eBeamLatticeCapModeSphere",""],["eLib3MFBeamLatticeClipMode_eBeamLatticeClipModeInside",""],["eLib3MFBeamLatticeClipMode_eBeamLatticeClipModeNoClipMode",""],["eLib3MFBeamLatticeClipMode_eBeamLatticeClipModeOutside",""],["eLib3MFBlendMethod_eBlendMethodMix",""],["eLib3MFBlendMethod_eBlendMethodMultiply",""],["eLib3MFBlendMethod_eBlendMethodNoBlendMethod",""],["eLib3MFCompression_eCompressionDeflate",""],["eLib3MFCompression_eCompressionNoCompression",""],["eLib3MFDigestMethod_eDigestMethodSHA1",""],["eLib3MFDigestMethod_eDigestMethodSHA256",""],["eLib3MFEncryptionAlgorithm_eEncryptionAlgorithmAES256_GCM",""],["eLib3MFMgfAlgorithm_eMgfAlgorithmMGF1_SHA1",""],["eLib3MFMgfAlgorithm_eMgfAlgorithmMGF1_SHA224",""],["eLib3MFMgfAlgorithm_eMgfAlgorithmMGF1_SHA256",""],["eLib3MFMgfAlgorithm_eMgfAlgorithmMGF1_SHA384",""],["eLib3MFMgfAlgorithm_eMgfAlgorithmMGF1_SHA512",""],["eLib3MFModelUnit_eModelUnitCentiMeter",""],["eLib3MFModelUnit_eModelUnitFoot",""],["eLib3MFModelUnit_eModelUnitInch",""],["eLib3MFModelUnit_eModelUnitMeter",""],["eLib3MFModelUnit_eModelUnitMicroMeter",""],["eLib3MFModelUnit_eModelUnitMilliMeter",""],["eLib3MFObjectType_eObjectTypeModel",""],["eLib3MFObjectType_eObjectTypeOther",""],["eLib3MFObjectType_eObjectTypeSolidSupport",""],["eLib3MFObjectType_eObjectTypeSupport",""],["eLib3MFProgressIdentifier_eProgressIdentifierCLEANUP",""],["eLib3MFProgressIdentifier_eProgressIdentifierCREATEOPCPACKAGE",""],["eLib3MFProgressIdentifier_eProgressIdentifierDONE",""],["eLib3MFProgressIdentifier_eProgressIdentifierEXTRACTOPCPACKAGE",""],["eLib3MFProgressIdentifier_eProgressIdentifierQUERYCANCELED",""],["eLib3MFProgressIdentifier_eProgressIdentifierREADBUILD",""],["eLib3MFProgressIdentifier_eProgressIdentifierREADCUSTOMATTACHMENT",""],["eLib3MFProgressIdentifier_eProgressIdentifierREADMESH",""],["eLib3MFProgressIdentifier_eProgressIdentifierREADNONROOTMODELS",""],["eLib3MFProgressIdentifier_eProgressIdentifierREADRESOURCES",""],["eLib3MFProgressIdentifier_eProgressIdentifierREADROOTMODEL",""],["eLib3MFProgressIdentifier_eProgressIdentifierREADSLICES",""],["eLib3MFProgressIdentifier_eProgressIdentifierREADSTREAM",""],["eLib3MFProgressIdentifier_eProgressIdentifierREADTEXTURETACHMENTS",""],["eLib3MFProgressIdentifier_eProgressIdentifierWRITEATTACHMENTS",""],["eLib3MFProgressIdentifier_eProgressIdentifierWRITECONTENTTYPES",""],["eLib3MFProgressIdentifier_eProgressIdentifierWRITEKEYSTORE",""],["eLib3MFProgressIdentifier_eProgressIdentifierWRITEMODELSTOSTREAM",""],["eLib3MFProgressIdentifier_eProgressIdentifierWRITENOBJECTS",""],["eLib3MFProgressIdentifier_eProgressIdentifierWRITENODES",""],["eLib3MFProgressIdentifier_eProgressIdentifierWRITENONROOTMODELS",""],["eLib3MFProgressIdentifier_eProgressIdentifierWRITEROOTMODEL",""],["eLib3MFProgressIdentifier_eProgressIdentifierWRITESLICES",""],["eLib3MFProgressIdentifier_eProgressIdentifierWRITETRIANGLES",""],["eLib3MFPropertyType_ePropertyTypeBaseMaterial",""],["eLib3MFPropertyType_ePropertyTypeColors",""],["eLib3MFPropertyType_ePropertyTypeComposite",""],["eLib3MFPropertyType_ePropertyTypeMulti",""],["eLib3MFPropertyType_ePropertyTypeNoPropertyType",""],["eLib3MFPropertyType_ePropertyTypeTexCoord",""],["eLib3MFSlicesMeshResolution_eSlicesMeshResolutionFullres",""],["eLib3MFSlicesMeshResolution_eSlicesMeshResolutionLowres",""],["eLib3MFTextureFilter_eTextureFilterAuto",""],["eLib3MFTextureFilter_eTextureFilterLinear",""],["eLib3MFTextureFilter_eTextureFilterNearest",""],["eLib3MFTextureTileStyle_eTextureTileStyleClamp",""],["eLib3MFTextureTileStyle_eTextureTileStyleMirror",""],["eLib3MFTextureTileStyle_eTextureTileStyleNoTileStyle",""],["eLib3MFTextureTileStyle_eTextureTileStyleWrap",""],["eLib3MFTextureType_eTextureTypeJPEG",""],["eLib3MFTextureType_eTextureTypePNG",""],["eLib3MFTextureType_eTextureTypeUnknown",""],["eLib3MFWrappingAlgorithm_eWrappingAlgorithmRSA_OAEP",""]],"fn":[["lib3mf_accessright_getconsumer","Gets the consumer associated with this access right"],["lib3mf_accessright_getdigestmethod","Gets the digest method assoicated"],["lib3mf_accessright_getmgfalgorithm","Gets the associated mask generation function algorithm"],["lib3mf_accessright_getwrappingalgorithm","Gets the associated encryption algorithm"],["lib3mf_acquire","acquires shared ownership of an object instance"],["lib3mf_attachment_getpath","Retrieves an attachment’s package path. This function will be removed in a later release."],["lib3mf_attachment_getrelationshiptype","Retrieves an attachment’s relationship type"],["lib3mf_attachment_getstreamsize","Retrieves the size of the attachment stream"],["lib3mf_attachment_packagepart","Returns the PackagePart that is this attachment."],["lib3mf_attachment_readfrombuffer","Reads an attachment from a memory buffer"],["lib3mf_attachment_readfromcallback","Reads a model and from the data provided by a callback function"],["lib3mf_attachment_readfromfile","Reads an attachment from a file. The path of this file is only read when this attachment is being written as part of the 3MF packege, or via the WriteToFile or WriteToBuffer-methods."],["lib3mf_attachment_setpath","Sets an attachment’s package path. This function will be removed in a later release."],["lib3mf_attachment_setrelationshiptype","Sets an attachment’s relationship type."],["lib3mf_attachment_writetobuffer","Writes out the attachment into a buffer"],["lib3mf_attachment_writetofile","Writes out the attachment as file."],["lib3mf_basematerialgroup_addmaterial","Adds a new material to the material group"],["lib3mf_basematerialgroup_getallpropertyids","returns all the PropertyIDs of all materials in this group"],["lib3mf_basematerialgroup_getcount","Retrieves the count of base materials in the material group."],["lib3mf_basematerialgroup_getdisplaycolor","Returns a base material’s display color."],["lib3mf_basematerialgroup_getname","Returns the base material’s name"],["lib3mf_basematerialgroup_removematerial","Removes a material from the material group."],["lib3mf_basematerialgroup_setdisplaycolor","Sets a base material’s display color."],["lib3mf_basematerialgroup_setname","Sets a base material’s name"],["lib3mf_basematerialgroupiterator_getcurrentbasematerialgroup","Returns the MaterialGroup the iterator points at."],["lib3mf_beamlattice_addball","Adds a single ball to a mesh object."],["lib3mf_beamlattice_addbeam","Adds a single beam to a mesh object."],["lib3mf_beamlattice_addbeamset","Adds an empty beamset to a mesh object"],["lib3mf_beamlattice_getball","Returns index and radius of a single ball of a mesh object."],["lib3mf_beamlattice_getballcount","Returns the ball count of a mesh object."],["lib3mf_beamlattice_getballoptions","Returns the ball mode and the default ball radius for the beamlattice of this mesh."],["lib3mf_beamlattice_getballs","obtains all ball indices and radii of a mesh object."],["lib3mf_beamlattice_getbeam","Returns indices, radii and capmodes of a single beam of a mesh object."],["lib3mf_beamlattice_getbeamcount","Returns the beam count of a mesh object."],["lib3mf_beamlattice_getbeams","obtains all beam indices, radii and capmodes of a mesh object."],["lib3mf_beamlattice_getbeamset","Returns a beamset of a mesh object"],["lib3mf_beamlattice_getbeamsetcount","Returns the number of beamsets of a mesh object."],["lib3mf_beamlattice_getclipping","Returns the clipping mode and the clipping-mesh for the beamlattice of this mesh."],["lib3mf_beamlattice_getminlength","Returns the minimal length of beams for the beamlattice."],["lib3mf_beamlattice_getrepresentation","Returns the representation-mesh for the beamlattice of this mesh."],["lib3mf_beamlattice_setball","Sets the index and radius of a single ball of a mesh object."],["lib3mf_beamlattice_setballoptions","Sets the ball mode and thedefault ball radius for the beamlattice."],["lib3mf_beamlattice_setballs","Sets all ball indices and radii of a mesh object."],["lib3mf_beamlattice_setbeam","Sets the indices, radii and capmodes of a single beam of a mesh object."],["lib3mf_beamlattice_setbeams","Sets all beam indices, radii and capmodes of a mesh object."],["lib3mf_beamlattice_setclipping","Sets the clipping mode and the clipping-mesh for the beamlattice of this mesh."],["lib3mf_beamlattice_setminlength","Sets the minimal length of beams for the beamlattice."],["lib3mf_beamlattice_setrepresentation","Sets the representation-mesh for the beamlattice of this mesh."],["lib3mf_beamset_getballreferencecount","Retrieves the ball reference count of a beamset"],["lib3mf_beamset_getballreferences","Retrieves the ball references of a beamset"],["lib3mf_beamset_getidentifier","Retrieves a beamset’s identifier string"],["lib3mf_beamset_getname","Retrieves a beamset’s name string"],["lib3mf_beamset_getreferencecount","Retrieves the reference count of a beamset"],["lib3mf_beamset_getreferences","Retrieves the references of a beamset"],["lib3mf_beamset_setballreferences","Sets the ball references of a beamset"],["lib3mf_beamset_setidentifier","Sets a beamset’s identifier string"],["lib3mf_beamset_setname","Sets a beamset’s name string"],["lib3mf_beamset_setreferences","Sets the references of a beamset"],["lib3mf_builditem_getmetadatagroup","Returns the metadatagroup of this build item"],["lib3mf_builditem_getobjectresource","Retrieves the object resource associated to a build item"],["lib3mf_builditem_getobjectresourceid","Retrieves the object UniqueResourceID associated to a build item"],["lib3mf_builditem_getobjecttransform","Retrieves a build item’s transformation matrix."],["lib3mf_builditem_getoutbox","Returns the outbox of a build item"],["lib3mf_builditem_getpartnumber","Retrieves a build item’s part number string"],["lib3mf_builditem_getuuid","returns, whether a build item has a UUID and, if true, the build item’s UUID"],["lib3mf_builditem_hasobjecttransform","Checks, if a build item has a non-identity transformation matrix"],["lib3mf_builditem_setobjecttransform","Sets a build item’s transformation matrix."],["lib3mf_builditem_setpartnumber","Sets a build item’s part number string"],["lib3mf_builditem_setuuid","sets the build item’s UUID"],["lib3mf_builditemiterator_clone","Creates a new build item iterator with the same build item list."],["lib3mf_builditemiterator_count","Returns the number of build items the iterator captures."],["lib3mf_builditemiterator_getcurrent","Returns the build item the iterator points at."],["lib3mf_builditemiterator_movenext","Iterates to the next build item in the list."],["lib3mf_builditemiterator_moveprevious","Iterates to the previous build item in the list."],["lib3mf_colorgroup_addcolor","Adds a new value."],["lib3mf_colorgroup_getallpropertyids","returns all the PropertyIDs of all colors within this group"],["lib3mf_colorgroup_getcolor","Sets a color value."],["lib3mf_colorgroup_getcount","Retrieves the count of base materials in this Color Group."],["lib3mf_colorgroup_removecolor","Removes a color from the color group."],["lib3mf_colorgroup_setcolor","Sets a color value."],["lib3mf_colorgroupiterator_getcurrentcolorgroup","Returns the ColorGroup the iterator points at."],["lib3mf_colortofloatrgba","Calculates float-RGBA-values from a Color"],["lib3mf_colortorgba","Calculates uint8-RGBA-values from a Color"],["lib3mf_component_getobjectresource","Returns the Resource Instance of the component."],["lib3mf_component_getobjectresourceid","Returns the UniqueResourceID of the component."],["lib3mf_component_gettransform","Returns the transformation matrix of the component."],["lib3mf_component_getuuid","returns, whether a component has a UUID and, if true, the component’s UUID"],["lib3mf_component_hastransform","Returns, if the component has a different transformation than the identity matrix"],["lib3mf_component_settransform","Sets the transformation matrix of the component."],["lib3mf_component_setuuid","sets the component’s UUID"],["lib3mf_componentsobject_addcomponent","Adds a new component to a components object."],["lib3mf_componentsobject_getcomponent","Retrieves a component from a component object."],["lib3mf_componentsobject_getcomponentcount","Retrieves a component count of a component object."],["lib3mf_componentsobjectiterator_getcurrentcomponentsobject","Returns the ComponentsObject the iterator points at."],["lib3mf_compositematerials_addcomposite","Adds a new Composite-Mixing Values to the CompositeMaterials."],["lib3mf_compositematerials_getallpropertyids","returns all the PropertyIDs of all Composite-Mixing Values in this CompositeMaterials"],["lib3mf_compositematerials_getbasematerialgroup","Obtains the BaseMaterialGroup instance of this CompositeMaterials."],["lib3mf_compositematerials_getcomposite","Obtains a Composite-Maxing Ratio of this CompositeMaterials."],["lib3mf_compositematerials_getcount","Retrieves the count of Composite-s in the CompositeMaterials."],["lib3mf_compositematerials_removecomposite","Removes a Composite-Maxing Ratio from the CompositeMaterials."],["lib3mf_compositematerialsiterator_getcurrentcompositematerials","Returns the CompositeMaterials the iterator points at."],["lib3mf_consumer_getconsumerid","Gets the consumerid"],["lib3mf_consumer_getkeyid","Getts the keyid"],["lib3mf_consumer_getkeyvalue","Gets the keyvalue associated with this consumer"],["lib3mf_contentencryptionparams_getadditionalauthenticationdata","A handler descriptor that uniquely identifies the context of the resource. Each resource will be assigned a different value"],["lib3mf_contentencryptionparams_getauthenticationtag","A handler descriptor that uniquely identifies the context of the resource. Each resource will be assigned a different value"],["lib3mf_contentencryptionparams_getdescriptor","A handler descriptor that uniquely identifies the context of the resource. Each resource will be assigned a different value"],["lib3mf_contentencryptionparams_getencryptionalgorithm","Returns the encryption method to be used in this encryption process"],["lib3mf_contentencryptionparams_getinitializationvector","Gets the IV data"],["lib3mf_contentencryptionparams_getkey","Gets the key for the resource associated"],["lib3mf_contentencryptionparams_getkeyuuid","Gets the resourcedatagroup keyuuid"],["lib3mf_contentencryptionparams_setauthenticationtag","Sets the authentication tag"],["lib3mf_createmodel","creates an empty model instance."],["lib3mf_floatrgbatocolor","Creates a Color from uint8 RGBA values"],["lib3mf_getbuildinformation","retrieves build information of this library."],["lib3mf_getidentitytransform","Creates an identity transform"],["lib3mf_getlasterror","Retrieves the last error string of an instance"],["lib3mf_getlibraryversion","retrieves the binary version of this library."],["lib3mf_getprereleaseinformation","retrieves prerelease information of this library."],["lib3mf_getscaletransform","Creates a scale transform"],["lib3mf_getspecificationversion","retrieves whether a specification is supported, and if so, which version."],["lib3mf_getsymbollookupmethod","Returns the address of the SymbolLookupMethod"],["lib3mf_gettranslationtransform","Creates an translation transform"],["lib3mf_getuniformscaletransform","Creates a uniform scale transform"],["lib3mf_keystore_addconsumer","Adds a consumer to the keystore"],["lib3mf_keystore_addresourcedata","Add resourcedata to resourcedatagroup element"],["lib3mf_keystore_addresourcedatagroup","Adds a resource data group into the keystore."],["lib3mf_keystore_findconsumer","Finds a consumer by ID"],["lib3mf_keystore_findresourcedata","Finds a resource data on this resource group"],["lib3mf_keystore_findresourcedatagroup","Finds a resource data group that contains a particular resourcedata"],["lib3mf_keystore_getconsumer","Get a consumer from the keystore"],["lib3mf_keystore_getconsumercount","Gets the number of consumers in the keystore"],["lib3mf_keystore_getresourcedata","Gets a resource data"],["lib3mf_keystore_getresourcedatacount","Gets the number of resource data in the keysore"],["lib3mf_keystore_getresourcedatagroup","Gets a resource data group"],["lib3mf_keystore_getresourcedatagroupcount","Gets the number of resource data group in the keysore"],["lib3mf_keystore_getuuid","Gets the keystore UUID"],["lib3mf_keystore_removeconsumer","Removes a consumer from the keystore"],["lib3mf_keystore_removeresourcedata","Removes a resource data"],["lib3mf_keystore_removeresourcedatagroup","Removes a resource data group"],["lib3mf_keystore_setuuid","Sets the keystore UUID"],["lib3mf_meshobject_addtriangle","Adds a single triangle to a mesh object"],["lib3mf_meshobject_addvertex","Adds a single vertex to a mesh object"],["lib3mf_meshobject_beamlattice","Retrieves the BeamLattice within this MeshObject."],["lib3mf_meshobject_clearallproperties","Clears all properties of this mesh object (triangle and object-level)."],["lib3mf_meshobject_getalltriangleproperties","Gets the properties of all triangles of a mesh object."],["lib3mf_meshobject_getobjectlevelproperty","Gets the property at the object-level of the mesh object."],["lib3mf_meshobject_gettriangle","Returns indices of a single triangle of a mesh object."],["lib3mf_meshobject_gettrianglecount","Returns the triangle count of a mesh object."],["lib3mf_meshobject_gettriangleindices","Get all triangles of a mesh object"],["lib3mf_meshobject_gettriangleproperties","Gets the properties of a single triangle of a mesh object."],["lib3mf_meshobject_getvertex","Returns the vertex count of a mesh object."],["lib3mf_meshobject_getvertexcount","Returns the vertex count of a mesh object."],["lib3mf_meshobject_getvertices","Obtains all vertex positions of a mesh object"],["lib3mf_meshobject_ismanifoldandoriented","Retrieves, if an object describes a topologically oriented and manifold mesh, according to the core spec."],["lib3mf_meshobject_setalltriangleproperties","Sets the properties of all triangles of a mesh object. Sets the object level property to the first entry of the passed triangle properties, if not yet specified."],["lib3mf_meshobject_setgeometry","Set all triangles of a mesh object"],["lib3mf_meshobject_setobjectlevelproperty","Sets the property at the object-level of the mesh object."],["lib3mf_meshobject_settriangle","Sets the indices of a single triangle of a mesh object."],["lib3mf_meshobject_settriangleproperties","Sets the properties of a single triangle of a mesh object."],["lib3mf_meshobject_setvertex","Sets the coordinates of a single vertex of a mesh object"],["lib3mf_meshobjectiterator_getcurrentmeshobject","Returns the MeshObject the iterator points at."],["lib3mf_metadata_getkey","returns the (namespace+name) of a metadata"],["lib3mf_metadata_getmustpreserve","returns, whether a metadata must be preserved"],["lib3mf_metadata_getname","returns the name of a metadata"],["lib3mf_metadata_getnamespace","returns the namespace URL of the metadata"],["lib3mf_metadata_gettype","returns the type of a metadata"],["lib3mf_metadata_getvalue","returns the value of the metadata"],["lib3mf_metadata_setmustpreserve","sets whether a metadata must be preserved"],["lib3mf_metadata_setname","sets a new name of a metadata"],["lib3mf_metadata_setnamespace","sets a new namespace URL of the metadata"],["lib3mf_metadata_settype","sets a new type of a metadata. This must be a simple XML type"],["lib3mf_metadata_setvalue","sets a new value of the metadata"],["lib3mf_metadatagroup_addmetadata","adds a new metadata to this metadatagroup"],["lib3mf_metadatagroup_getmetadata","returns a metadata value within this metadatagroup"],["lib3mf_metadatagroup_getmetadatabykey","returns a metadata value within this metadatagroup"],["lib3mf_metadatagroup_getmetadatacount","returns the number of metadata in this metadatagroup"],["lib3mf_metadatagroup_removemetadata","removes metadata from the model."],["lib3mf_metadatagroup_removemetadatabyindex","removes metadata by index from the model."],["lib3mf_model_addattachment","adds an attachment stream to the model. The OPC part will be related to the model stream with a certain relationship type."],["lib3mf_model_addbasematerialgroup","adds an empty BaseMaterialGroup resource to the model."],["lib3mf_model_addbuilditem","adds a build item to the model."],["lib3mf_model_addcolorgroup","adds an empty ColorGroup resource to the model."],["lib3mf_model_addcomponentsobject","adds an empty component object to the model."],["lib3mf_model_addcompositematerials","adds an empty CompositeMaterials resource to the model."],["lib3mf_model_addcustomcontenttype","Adds a new Content Type to the model."],["lib3mf_model_addmeshobject","adds an empty mesh object to the model."],["lib3mf_model_addmultipropertygroup","adds an empty MultiPropertyGroup resource to the model."],["lib3mf_model_addslicestack","creates a new model slicestack by its id"],["lib3mf_model_addtexture2dfromattachment","adds a texture2d resource to the model. Its path is given by that of an existing attachment."],["lib3mf_model_addtexture2dgroup","adds an empty Texture2DGroup resource to the model."],["lib3mf_model_createpackagethumbnailattachment","Create a new or the existing package thumbnail for the OPC package."],["lib3mf_model_findattachment","retrieves an attachment stream object from the model."],["lib3mf_model_findorcreatepackagepart","Returns a new PackagePart for use within the OPC package."],["lib3mf_model_getattachment","retrieves an attachment stream object from the model.."],["lib3mf_model_getattachmentcount","retrieves the number of attachments of the model."],["lib3mf_model_getbasematerialgroupbyid","finds a model base material group by its UniqueResourceID"],["lib3mf_model_getbasematerialgroups","creates a BaseMaterialGroupIterator instance with all base material resources."],["lib3mf_model_getbuilditems","creates a build item iterator instance with all build items."],["lib3mf_model_getbuilduuid","returns, whether a build has a UUID and, if true, the build’s UUID"],["lib3mf_model_getcolorgroupbyid","finds a model color group by its UniqueResourceID"],["lib3mf_model_getcolorgroups","creates a ColorGroupIterator instance with all ColorGroup resources."],["lib3mf_model_getcomponentsobjectbyid","finds a components object by its UniqueResourceID"],["lib3mf_model_getcomponentsobjects","creates a resource iterator instance with all components object resources."],["lib3mf_model_getcompositematerials","creates a CompositeMaterialsIterator instance with all CompositeMaterials resources."],["lib3mf_model_getcompositematerialsbyid","finds a model CompositeMaterials by its UniqueResourceID"],["lib3mf_model_getkeystore","Gets the keystore associated with this model"],["lib3mf_model_getlanguage","retrieves the language of a model"],["lib3mf_model_getmeshobjectbyid","finds a mesh object by its UniqueResourceID"],["lib3mf_model_getmeshobjects","creates a resource iterator instance with all mesh object resources."],["lib3mf_model_getmetadatagroup","Returns the metadata of the model as MetaDataGroup"],["lib3mf_model_getmultipropertygroupbyid","finds a model MultiPropertyGroup by its UniqueResourceID"],["lib3mf_model_getmultipropertygroups","creates a MultiPropertyGroupsIterator instance with all MultiPropertyGroup resources."],["lib3mf_model_getobjects","creates a resource iterator instance with all object resources."],["lib3mf_model_getoutbox","Returns the outbox of a Model"],["lib3mf_model_getpackagethumbnailattachment","Get the attachment to the OPC package containing the package thumbnail."],["lib3mf_model_getpropertytypebyid","returns a Property’s type"],["lib3mf_model_getresources","creates a resource iterator instance with all resources."],["lib3mf_model_getslicestackbyid","finds a model slicestack by its UniqueResourceID"],["lib3mf_model_getslicestacks","creates a resource iterator instance with all slice stack resources."],["lib3mf_model_gettexture2dbyid","finds a model texture by its UniqueResourceID"],["lib3mf_model_gettexture2dgroupbyid","finds a model texture2d group by its UniqueResourceID"],["lib3mf_model_gettexture2dgroups","creates a Texture2DGroupIterator instance with all base material resources."],["lib3mf_model_gettexture2ds","creates a Texture2DIterator instance with all texture2d resources."],["lib3mf_model_getunit","returns the units of a model."],["lib3mf_model_haspackagethumbnailattachment","Retrieve whether the OPC package contains a package thumbnail."],["lib3mf_model_mergetomodel","Merges all components and objects which are referenced by a build item into a mesh. The memory is duplicated and a new model is created."],["lib3mf_model_queryreader","creates a model reader instance for a specific file type"],["lib3mf_model_querywriter","creates a model writer instance for a specific file type"],["lib3mf_model_removeattachment","Removes attachment from the model."],["lib3mf_model_removebuilditem","removes a build item from the model"],["lib3mf_model_removecustomcontenttype","Removes a custom Content Type from the model (UTF8 version)."],["lib3mf_model_removepackagethumbnailattachment","Remove the attachment to the OPC package containing the package thumbnail."],["lib3mf_model_rootmodelpart","Returns the PackagePart within the OPC package that holds the root model."],["lib3mf_model_setbuilduuid","sets the build’s UUID"],["lib3mf_model_setlanguage","sets the language of a model"],["lib3mf_model_setrandomnumbercallback","Sets the random number generator callback for use in the library"],["lib3mf_model_setunit","sets the units of a model."],["lib3mf_multipropertygroup_addlayer","Adds a MultiPropertyLayer to this MultiPropertyGroup."],["lib3mf_multipropertygroup_addmultiproperty","Adds a new MultiProperty to the MultiPropertyGroup."],["lib3mf_multipropertygroup_getallpropertyids","returns all the PropertyIDs of all MultiProperty-s in this MultiPropertyGroup"],["lib3mf_multipropertygroup_getcount","Retrieves the count of MultiProperty-s in the MultiPropertyGroup."],["lib3mf_multipropertygroup_getlayer","Obtains a MultiPropertyLayer of this MultiPropertyGroup."],["lib3mf_multipropertygroup_getlayercount","Retrieves the number of layers of this MultiPropertyGroup."],["lib3mf_multipropertygroup_getmultiproperty","Obtains the PropertyIDs of a MultiProperty."],["lib3mf_multipropertygroup_removelayer","Removes a MultiPropertyLayer from this MultiPropertyGroup."],["lib3mf_multipropertygroup_removemultiproperty","Removes a MultiProperty from this MultiPropertyGroup."],["lib3mf_multipropertygroup_setmultiproperty","Sets the PropertyIDs of a MultiProperty."],["lib3mf_multipropertygroupiterator_getcurrentmultipropertygroup","Returns the MultiPropertyGroup the iterator points at."],["lib3mf_object_assignslicestack","assigns a slicestack to the object"],["lib3mf_object_clearslicestack","unlinks the attached slicestack from this object. If no slice stack is attached, do noting."],["lib3mf_object_clearthumbnailattachment","Clears the attachment. The attachment instance is not removed from the package."],["lib3mf_object_getmetadatagroup","Returns the metadatagroup of this object"],["lib3mf_object_getname","Retrieves an object’s name"],["lib3mf_object_getoutbox","Returns the outbox of a build item"],["lib3mf_object_getpartnumber","Retrieves an object’s part number"],["lib3mf_object_getslicesmeshresolution","get the meshresolution of the mesh object"],["lib3mf_object_getslicestack","get the Slicestack attached to the object"],["lib3mf_object_getthumbnailattachment","Get the attachment containing the object thumbnail."],["lib3mf_object_gettype","Retrieves an object’s type"],["lib3mf_object_getuuid","Retrieves an object’s uuid string (see production extension specification)"],["lib3mf_object_hasslices","returns whether the Object has a slice stack. If Recursive is true, also checks whether any references object has a slice stack"],["lib3mf_object_iscomponentsobject","Retrieves, if an object is a components object"],["lib3mf_object_ismeshobject","Retrieves, if an object is a mesh object"],["lib3mf_object_isvalid","Retrieves, if the object is valid according to the core spec. For mesh objects, we distinguish between the type attribute of the object:In case of object type other, this always means false.In case of object type model or solidsupport, this means, if the mesh suffices all requirements of the core spec chapter 4.1.In case of object type support or surface, this always means true.A component objects is valid if and only if it contains at least one component and all child components are valid objects."],["lib3mf_object_setattachmentasthumbnail","Use an existing attachment as thumbnail for this object"],["lib3mf_object_setname","Sets an object’s name string"],["lib3mf_object_setpartnumber","Sets an objects partnumber string"],["lib3mf_object_setslicesmeshresolution","set the meshresolution of the mesh object"],["lib3mf_object_settype","Sets an object’s type"],["lib3mf_object_setuuid","Sets a build object’s uuid string (see production extension specification)"],["lib3mf_objectiterator_getcurrentobject","Returns the Object the iterator points at."],["lib3mf_packagepart_getpath","Returns the absolute path of this PackagePart."],["lib3mf_packagepart_setpath","Sets the absolute path of this PackagePart."],["lib3mf_reader_addkeywrappingcallback","Registers a callback to deal with key wrapping mechanism from keystore"],["lib3mf_reader_addrelationtoread","Adds a relationship type which shall be read as attachment in memory while loading"],["lib3mf_reader_getstrictmodeactive","Queries whether the strict mode of the reader is active or not"],["lib3mf_reader_getwarning","Returns Warning and Error Information of the read process"],["lib3mf_reader_getwarningcount","Returns Warning and Error Count of the read process"],["lib3mf_reader_readfrombuffer","Reads a model from a memory buffer."],["lib3mf_reader_readfromcallback","Reads a model and from the data provided by a callback function"],["lib3mf_reader_readfromfile","Reads a model from a file. The file type is specified by the Model Reader class"],["lib3mf_reader_removerelationtoread","Removes a relationship type which shall be read as attachment in memory while loading"],["lib3mf_reader_setcontentencryptioncallback","Registers a callback to deal with encryption of content"],["lib3mf_reader_setprogresscallback","Set the progress callback for calls to this writer"],["lib3mf_reader_setstrictmodeactive","Activates (deactivates) the strict mode of the reader."],["lib3mf_release","releases shared ownership of an object instance"],["lib3mf_resource_getmodelresourceid","Retrieves the id of this resource within a model."],["lib3mf_resource_getresourceid","Retrieves the unique id of this resource within a package. This function will be removed in a later release in favor of GetUniqueResourceID"],["lib3mf_resource_getuniqueresourceid","Retrieves the unique id of this resource within a package."],["lib3mf_resource_packagepart","Returns the PackagePart within which this resource resides"],["lib3mf_resource_setpackagepart","Sets the new PackagePart within which this resource resides"],["lib3mf_resourcedata_getadditionalauthenticationdata","Tells whether this ResourceData is compressed or not"],["lib3mf_resourcedata_getcompression","Tells whether this ResourceData is compressed or not"],["lib3mf_resourcedata_getencryptionalgorithm","Gets the encryption algorithm used to encrypt this ResourceData"],["lib3mf_resourcedata_getpath","Gets the encrypted part path"],["lib3mf_resourcedatagroup_addaccessright","Add accessright to resourcedatagroup element"],["lib3mf_resourcedatagroup_findaccessrightbyconsumer","Finds the AccessRight associated with a Consumer"],["lib3mf_resourcedatagroup_getkeyuuid","Sets the resourcedatagroup keyuuid"],["lib3mf_resourcedatagroup_removeaccessright","Removes access from a Consumer on this resource data group"],["lib3mf_resourceiterator_clone","Creates a new resource iterator with the same resource list."],["lib3mf_resourceiterator_count","Returns the number of resoucres the iterator captures."],["lib3mf_resourceiterator_getcurrent","Returns the resource the iterator points at."],["lib3mf_resourceiterator_movenext","Iterates to the next resource in the list."],["lib3mf_resourceiterator_moveprevious","Iterates to the previous resource in the list."],["lib3mf_retrieveprogressmessage","Return an English text for a progress identifier.|Note: this is the only function you can call from your callback function."],["lib3mf_rgbatocolor","Creates a Color from uint8 RGBA values"],["lib3mf_setjournal","Sets the journal file path"],["lib3mf_slice_addpolygon","Add a new polygon to this slice"],["lib3mf_slice_getpolygoncount","Get the number of polygons in the slice"],["lib3mf_slice_getpolygonindexcount","Get the number of vertices in a slice"],["lib3mf_slice_getpolygonindices","Get all vertices of a slice"],["lib3mf_slice_getvertexcount","Get the number of vertices in a slice"],["lib3mf_slice_getvertices","Get all vertices of a slice"],["lib3mf_slice_getztop","Get the upper Z-Coordinate of this slice."],["lib3mf_slice_setpolygonindices","Set all indices of a polygon"],["lib3mf_slice_setvertices","Set all vertices of a slice. All polygons will be cleared."],["lib3mf_slicestack_addslice","Returns the number of slices"],["lib3mf_slicestack_addslicestackreference","Adds another existing slicestack as sliceref in this slicestack"],["lib3mf_slicestack_collapseslicereferences","Removes the indirection of slices via slice-refs, i.e. creates the slices of all slice refs of this SliceStack as actual slices of this SliceStack. All previously existing slices or slicerefs will be removed."],["lib3mf_slicestack_getbottomz","Get the lower Z-Coordinate of the slice stack."],["lib3mf_slicestack_getownpath","Obtains the package path where this Slice should be stored. Returns an empty string if the slicestack is stored within the root model."],["lib3mf_slicestack_getslice","Query a slice from the slice stack"],["lib3mf_slicestack_getslicecount","Returns the number of slices"],["lib3mf_slicestack_getslicerefcount","Returns the number of slice refs"],["lib3mf_slicestack_getslicestackreference","Adds another existing slicestack as sliceref in this slicestack"],["lib3mf_slicestack_setownpath","Sets the package path where this Slice should be stored. Input an empty string to reset the path"],["lib3mf_slicestackiterator_getcurrentslicestack","Returns the SliceStack the iterator points at."],["lib3mf_texture2d_getattachment","Retrieves the attachment located at the path of the texture."],["lib3mf_texture2d_getcontenttype","Retrieves a texture’s content type."],["lib3mf_texture2d_getfilter","Retrieves a texture’s filter type."],["lib3mf_texture2d_gettilestyleuv","Retrieves a texture’s tilestyle type."],["lib3mf_texture2d_setattachment","Sets the texture’s package path to the path of the attachment."],["lib3mf_texture2d_setcontenttype","Retrieves a texture’s content type."],["lib3mf_texture2d_setfilter","Sets a texture’s filter type."],["lib3mf_texture2d_settilestyleuv","Sets a texture’s tilestyle type."],["lib3mf_texture2dgroup_addtex2coord","Adds a new tex2coord to the Texture2DGroup"],["lib3mf_texture2dgroup_getallpropertyids","returns all the PropertyIDs of all tex2coords in this Texture2DGroup"],["lib3mf_texture2dgroup_getcount","Retrieves the count of tex2coords in the Texture2DGroup."],["lib3mf_texture2dgroup_gettex2coord","Obtains a tex2coord to the Texture2DGroup"],["lib3mf_texture2dgroup_gettexture2d","Obtains the texture2D instance of this group."],["lib3mf_texture2dgroup_removetex2coord","Removes a tex2coords from the Texture2DGroup."],["lib3mf_texture2dgroupiterator_getcurrenttexture2dgroup","Returns the Texture2DGroup the iterator points at."],["lib3mf_texture2diterator_getcurrenttexture2d","Returns the Texture2D the iterator points at."],["lib3mf_writer_addkeywrappingcallback","Registers a callback to deal with data key encryption/decryption from keystore"],["lib3mf_writer_getdecimalprecision","Returns the number of digits after the decimal point to be written in each vertex coordinate-value."],["lib3mf_writer_getstreamsize","Retrieves the size of the full 3MF file stream."],["lib3mf_writer_getstrictmodeactive","Queries whether the strict mode of the reader is active or not"],["lib3mf_writer_getwarning","Returns Warning and Error Information of the read process"],["lib3mf_writer_getwarningcount","Returns Warning and Error Count of the read process"],["lib3mf_writer_setcontentencryptioncallback","Registers a callback to deal with encryption of content"],["lib3mf_writer_setdecimalprecision","Sets the number of digits after the decimal point to be written in each vertex coordinate-value."],["lib3mf_writer_setprogresscallback","Set the progress callback for calls to this writer"],["lib3mf_writer_setstrictmodeactive","Activates (deactivates) the strict mode of the reader."],["lib3mf_writer_writetobuffer","Writes out the 3MF file into a memory buffer"],["lib3mf_writer_writetocallback","Writes out the model and passes the data to a provided callback function. The file type is specified by the Model Writer class."],["lib3mf_writer_writetofile","Writes out the model as file. The file type is specified by the Model Writer class."]],"struct":[["sLib3MFBall",""],["sLib3MFBeam",""],["sLib3MFBox",""],["sLib3MFColor",""],["sLib3MFCompositeConstituent",""],["sLib3MFMultiPropertyLayer",""],["sLib3MFPosition",""],["sLib3MFPosition2D",""],["sLib3MFTex2Coord",""],["sLib3MFTransform",""],["sLib3MFTriangle",""],["sLib3MFTriangleProperties",""]],"type":[["Lib3MFContentEncryptionCallback","Lib3MFContentEncryptionCallback - A callback to encrypt/decrypt content called on each resource encrypted. This might be called several times depending on content size. If Input is not available(either null or size is 0), clients must return the result of authenticated tag generation/validation."],["Lib3MFHandle",""],["Lib3MFKeyWrappingCallback","Lib3MFKeyWrappingCallback - A callback used to wrap (encrypt) the content key available in keystore resource group"],["Lib3MFProgressCallback","Lib3MFProgressCallback - A callback function"],["Lib3MFRandomNumberCallback","Lib3MFRandomNumberCallback - Callback to generate random numbers"],["Lib3MFReadCallback","Lib3MFReadCallback - Callback to call for reading a data chunk"],["Lib3MFResult","General type definitions"],["Lib3MFSeekCallback","Lib3MFSeekCallback - Callback to call for seeking in the stream"],["Lib3MFWriteCallback","Lib3MFWriteCallback - Callback to call for writing a data chunk"],["Lib3MF_AccessRight",""],["Lib3MF_Attachment",""],["Lib3MF_Base","Declaration of handle classes"],["Lib3MF_BaseMaterialGroup",""],["Lib3MF_BaseMaterialGroupIterator",""],["Lib3MF_BeamLattice",""],["Lib3MF_BeamSet",""],["Lib3MF_BuildItem",""],["Lib3MF_BuildItemIterator",""],["Lib3MF_ColorGroup",""],["Lib3MF_ColorGroupIterator",""],["Lib3MF_Component",""],["Lib3MF_ComponentsObject",""],["Lib3MF_ComponentsObjectIterator",""],["Lib3MF_CompositeMaterials",""],["Lib3MF_CompositeMaterialsIterator",""],["Lib3MF_Consumer",""],["Lib3MF_ContentEncryptionParams",""],["Lib3MF_KeyStore",""],["Lib3MF_MeshObject",""],["Lib3MF_MeshObjectIterator",""],["Lib3MF_MetaData",""],["Lib3MF_MetaDataGroup",""],["Lib3MF_Model",""],["Lib3MF_MultiPropertyGroup",""],["Lib3MF_MultiPropertyGroupIterator",""],["Lib3MF_Object",""],["Lib3MF_ObjectIterator",""],["Lib3MF_PackagePart",""],["Lib3MF_Reader",""],["Lib3MF_Resource",""],["Lib3MF_ResourceData",""],["Lib3MF_ResourceDataGroup",""],["Lib3MF_ResourceIterator",""],["Lib3MF_Slice",""],["Lib3MF_SliceStack",""],["Lib3MF_SliceStackIterator",""],["Lib3MF_Texture2D",""],["Lib3MF_Texture2DGroup",""],["Lib3MF_Texture2DGroupIterator",""],["Lib3MF_Texture2DIterator",""],["Lib3MF_Writer",""],["Lib3MF_double",""],["Lib3MF_int32",""],["Lib3MF_pvoid",""],["Lib3MF_single",""],["Lib3MF_uint32",""],["Lib3MF_uint64",""],["Lib3MF_uint8",""],["__int32_t",""],["__uint32_t",""],["__uint64_t",""],["__uint8_t",""],["eLib3MFBeamLatticeBallMode",""],["eLib3MFBeamLatticeCapMode",""],["eLib3MFBeamLatticeClipMode",""],["eLib3MFBlendMethod",""],["eLib3MFCompression",""],["eLib3MFDigestMethod",""],["eLib3MFEncryptionAlgorithm",""],["eLib3MFMgfAlgorithm",""],["eLib3MFModelUnit",""],["eLib3MFObjectType",""],["eLib3MFProgressIdentifier",""],["eLib3MFPropertyType","Declaration of enums"],["eLib3MFSlicesMeshResolution",""],["eLib3MFTextureFilter",""],["eLib3MFTextureTileStyle",""],["eLib3MFTextureType",""],["eLib3MFWrappingAlgorithm",""]],"union":[["structEnumLib3MFBeamLatticeCapMode",""],["structEnumLib3MFBlendMethod",""]]};